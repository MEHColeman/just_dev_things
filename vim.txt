# Vim Notes

## Text
  :set textwidth=79 to automatically insert lines breaks after 79 characters
  gq  to wrap the text on the current line

:set wrap linebreak nolist  to display long lines as multiple screen lines

## Spelling
  :setlocal spell  # turn on spell-checking
  :set nospell     # turn off spell-checking
  :setlocal spell spelllang=en_gb   # specify language
  ]s               # move to next spelling mistake
  zg               # add the highlighted word to the dictionary
  z=               # suggest words for word under cursor

## Writing files
  :sudowrite   write protected file (via eunuch plugin)

  :sav   # save a file with a new name, continue editing the new name
  :w     # save a file with a new name, continue editing the old name
  :w %:h/filename  # save filename in home directory of current file

## Tabs
  :tabnew   # create a new tab
  :tabclose # close tab
  {i}gt     # go to next tab
  gT        # go to previous tab
  ctrl-w T  # move window to new tab
  :tabdo <: command, e.g. %s/foo/bar/g> do command in all tabs

## Folds
  :set fdm=syntax

  zc, zo, za  - close, open, toggle fold at cursor
  zC, zO, zA  - close, open, toggle all folds at cursor

  zr, zR  - open one more (or all) level of folds throughout the buffer
  zm, zM  - close one (all) level of folds throughout the buffer

## Windows
  ctrl-w    # window operation
    s       # split horizontally
    v       #split vertically

## CTAGS
  ,b              # tagbar
  ,.              # ctrlP browser
  ctrl-}          # navigate to tag under cursor
  :tag <name>     # navigate to named tag
  :pop            # pop navigation stack
  :tnext
  :tprev          # navigate through multiple definitions

##  Comments
NERDCommenter is good for this
  ,c              # (un)comment selection
  ,cc             # comment current line
  ,cn             # comment current line, force nesting
  ,ci             # invert selection comments

## Macros
  q<letter>       # start recording
  q               # finish recording
  @<letter>       # run macro
  @@              # repeat macro

### Editing macros
  "<letter>p      # paste macro buffer
  0"<letter>y$    # copy current line into macro

## sed things
to delete all lines containing "profile"
:g/profile/d

delete all lines that are empty or that contain only whitespace:
:g/^\s*$/d

To delete all lines that do not contain a pattern, use g! or the equivalent v,
like this command to delete all lines that are not comment lines in a Vim
script:
:g!/^\s*"/d
:v/^\s*"/d

delete all lines except those that contain "error" or "warn" or "fail"
:v/error\|warn\|fail/d

## Surrounding things
cs "'          swap "" to ''
cs '<blah>     swap ' to <blah></blah>
ci"            change all in ""

i## Buffers
ayy = copy to buffer a
ap  = paste from buffer b
